# Whois
'''
.whois:: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ–±—Å–∞–π—Ç–µ. \n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ <code>.whois (–≤–µ–±—Å–∞–π—Ç) - –≤—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ–±—Å–∞–π—Ç–µ</code>\n\n<b>–ü—Ä–∏–º–µ—Ä:</b>\n\n<code>.whois google.com</code>
'''
from asyncio import sleep
from telethon import events, types
import whois


def a(client):
    @client.on(events.NewMessage(pattern=r"\.whois",outgoing=True))
    async def whois_check(event: types.Message) -> None:
        args = event.text.split(' ')
        if len(args) != 2:
            await event.edit(
                 "<b>‚ùå–í–≤–æ–¥–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Å cc—ã–ª–∫–æ–π –Ω–∞ —Å–∞–π—Ç!\n–ü—Ä–∏–º–µ—Ä:</b><code>.whois google.com</code>",
                 parse_mode='html'
                             )
            return
        url = args[-1]
        await event.edit("<b>‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞...</b>",parse_mode='html')
        try:
            domain_info=whois.whois(url)

            await event.edit(
                text=f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∞–π—Ç–µ:"
                f"\n‚îú<b>üéØ–¶–µ–ª—å: </b><code>{url}</code>"
                f"\n|"
                f"\n‚îú<b>üåê–î–æ–º–µ–Ω:</b> <code>{domain_info.domain_name}</code>"
                f"\n‚îú<b>üõÉ–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:</b> <code>{domain_info.creation_date}</code>"
                f"\n‚îú<b>‚åõÔ∏è–ò—Å—Ç–µ–∫–∞–µ—Ç:</b> <code>{domain_info.expiration_date}</code>"
                f"\n‚îú<b>üë§–í–ª–∞–¥–µ–ª–µ—Ü:</b> <code>{domain_info.registrant_name}</code>"
                f"\n‚îú<b>üè£–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:</b> <code>{domain_info.registrant_organization}</code>"
                f"\n‚îú<b>üìå–ê–¥—Ä–µ—Å:</b> <code>{domain_info.registrant_address}</code>"
                f"\n‚îú<b>üåá–ì–æ—Ä–æ–¥:</b> <code>{domain_info.registrant_city}</code>"
                f"\n‚îú<b>üåá–®—Ç–∞—Ç:</b> <code>{domain_info.registrant_state}</code>"
                f"\n‚îú<b>üì¨–ü–æ—á—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å:</b> <code>{domain_info.registrant_postal_code}</code>"
                f"\n‚îú<b>üè¥–°—Ç—Ä–∞–Ω–∞:</b> <code>{domain_info.registrant_country}</code>"
                f"\n‚îî<b>IP-–∞–¥—Ä–µ—Å:</b> <code>{domain_info.name_servers}</code>",
                parse_mode='html'
                )
        except Exception as e:
            await event.edit(f"<b>‚ùå–ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:</b>\n<code>{e}</code",parse_mode='html')
    	        
          


if __name__ == '__main__':
	try:
		a(client)
	except:
		pass